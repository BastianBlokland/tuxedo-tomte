image: docker:19.03.8
services:
  - name: docker:19.03.8-dind

variables: 
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  BUILD_IMAGE: $CI_REGISTRY/tuxedocomputers/development/tuxedo-packager:latest
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  SOURCE_DIR: ./src
  DEB_SOURCEFOLDER_DIR: ./deb/
  DEB_OUTPUTFOLDER: ./output/deb_output/
  RPM_SOURCEFOLDER_DIR: ./rpm/
  RPM_OUTPUTFOLDER: ./output/rpm_output/
  PACKAGENAME: tuxedo-tomte
  DEB_NAME: tuxedo-tomte-1.0.1.deb
  OUTPUTDIR: ./output/

stages:
  - prepare_container
  - build
  - test

prepare_container:
  stage: prepare_container
  image: docker:19.03.0
  services:
    - name: docker:19.03.0-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $BUILD_IMAGE
    - docker tag $BUILD_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE

build_job_deb:
  image: $CONTAINER_RELEASE_IMAGE
  stage: build
  script:
    - tuxedo-packager --execute build_deb --log=debug
    - printf "Gzip changelog"
    - gzip -n9  $DEB_OUTPUTFOLDER/usr/share/doc/$PACKAGENAME/changelog
    - chmod 644 $DEB_OUTPUTFOLDER/usr/share/doc/$PACKAGENAME/changelog.gz
    - echo "" #printf "Gzip Manpages"
    - echo "" #gzip -n9 $DEB_SOURCEFOLDER_DIR/usr/share/man/**/*
    - printf "Create Debian Package"
    - dpkg-deb -b $DEB_OUTPUTFOLDER $OUTPUTDIR/$DEB_NAME
    - printf "Lintian on Debian Package $BUILD_FOLDER_NAME/$debname"
    - lintian $OUTPUTDIR/$DEB_NAME --no-tag-display-limit

  artifacts:
    paths:
      - $DEB_OUTPUTFOLDER/*
      - $OUTPUTDIR/*

build_job_rpm:
  image: $CONTAINER_RELEASE_IMAGE
  stage: build
  script:
    - tuxedo-packager --execute build_rpm --log=debug
    - tar -czvf $PACKAGENAME.tar.gz $SOURCE_DIR
    - cp $PACKAGENAME.tar.gz $RPM_OUTPUTFOLDER/SOURCES
    - printf "Create RPM Package"
    - rpmbuild -ba $RPM_OUTPUTFOLDER/SPECS/$PACKAGENAME.spec

  artifacts:
    paths:
      - $RPM_OUTPUTFOLDER/*

test_job:
  image: ubuntu:18.04
  stage: test
  script:
    - echo "Run Tests"
    - cat /etc/lsb-release
    - ls -ln $BUILD_FOLDER_NAME
    - sh ./scripts/test_units.sh
