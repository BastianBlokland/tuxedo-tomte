build-package:
  image: registry.gitlab.com/tuxedocomputers/development/installation-testing/docker-images/debian-fai-package-builder:latest
  variables:
    PACKAGE_BASE_REPO_URL: "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages"
  before_script:
    # Extract the current version from debian/changelog
    - VERSIONSTRING=$(dpkg-parsechangelog | awk '/^Version:/ {print $2}')
    - "echo \"Current version: $VERSIONSTRING\""
    - BASE_VERSION=$(echo "$VERSIONSTRING" | awk -F- '{print $1}')

    # Check if the current version is in any Git tag
    - "ALREADY_TAGGED=$(curl --header \"JOB-TOKEN: $CI_JOB_TOKEN\" \"$PACKAGE_BASE_REPO_URL?package_name=tuxedo-tomte&package_version=$BASE_VERSION\")"
    - echo $ALREADY_TAGGED
    - |
        if [ "$ALREADY_TAGGED" != "[]" ]; then
            # If the current version is not in a tag, create a test version
            BRANCH_SHORT=$(echo "$CI_COMMIT_REF_NAME" | awk -F- '{print $1}')
            TIMESTAMP=$(date -d "$CI_COMMIT_TIMESTAMP" +"%Y%m%d-%H%M%S")
            TEST_VERSION="$BASE_VERSION-test-$BRANCH_SHORT-$TIMESTAMP"
            echo "Using test version: $TEST_VERSION"
            # Update the changelog with the new test version number
            dch --newversion $TEST_VERSION "New test release for $CI_COMMIT_REF_NAME"
            # Update the VERSIONSTRING with the test version
            VERSIONSTRING=$TEST_VERSION
        else
            echo "Version $VERSIONSTRING will be packaged."
        fi
  script:
    - ./build.sh
    - head -5 src/tuxedo-tomte
    - ls debian
    - cat debian/install
    - ls translations/locale
    - cat translations/locale/install
    - cd ..
    - |
      for deb_file in *.deb; do
        version="${deb_file#*_}"
        version="${version%%_*}"
        package="${deb_file%%_*}"
        echo "$deb_file : $package $version"
        curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "$deb_file" "$PACKAGE_BASE_REPO_URL/generic/$package/$version/$deb_file" 
      done

check:
  script:
    - ./check.sh
  allow_failure: true